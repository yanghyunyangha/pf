{
  "version": 3,
  "sources": ["../../.yarn/cache/@studio-freight-lenis-npm-1.0.16-d552efa3b2-9a1536154a.zip/node_modules/@studio-freight/lenis/src/maths.js", "../../.yarn/cache/@studio-freight-lenis-npm-1.0.16-d552efa3b2-9a1536154a.zip/node_modules/@studio-freight/lenis/src/animate.js", "../../.yarn/cache/@studio-freight-lenis-npm-1.0.16-d552efa3b2-9a1536154a.zip/node_modules/@studio-freight/lenis/src/dimensions.js", "../../.yarn/cache/@studio-freight-lenis-npm-1.0.16-d552efa3b2-9a1536154a.zip/node_modules/@studio-freight/lenis/src/debounce.js", "../../.yarn/cache/@studio-freight-lenis-npm-1.0.16-d552efa3b2-9a1536154a.zip/node_modules/@studio-freight/lenis/src/nanoevents.js", "../../.yarn/cache/@studio-freight-lenis-npm-1.0.16-d552efa3b2-9a1536154a.zip/node_modules/@studio-freight/lenis/src/virtual-scroll.js", "../../.yarn/cache/@studio-freight-lenis-npm-1.0.16-d552efa3b2-9a1536154a.zip/node_modules/@studio-freight/lenis/src/index.js"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, { completed })\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "export let createNanoEvents = () => ({\r\n  events: {},\r\n\r\n  // Emit an event with the provided arguments\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  },\r\n\r\n  // Register a callback for the specified event\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  },\r\n})\r\n", "import { clamp } from './maths'\r\nimport { createNanoEvents } from './nanoevents'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      inertia: true,\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n", "import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { clamp, modulo } from './maths'\r\nimport { createNanoEvents } from './nanoevents'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explaination\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Orientation} [direction]\r\n   * @property {GestureOrientation} [gestureDirection]\r\n   * @property {number} [mouseMultiplier]\r\n   * @property {boolean} [smooth]\r\n   *\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   * @property {boolean} [autoResize]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    //--legacy options--//\r\n    direction,\r\n    gestureDirection,\r\n    mouseMultiplier,\r\n    smooth,\r\n    //--legacy options--//\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper,\r\n    smoothWheel = smooth ?? true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration ? null : 0.1,\r\n    infinite = false,\r\n    orientation = direction ?? 'vertical', // vertical, horizontal\r\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = mouseMultiplier ?? 1,\r\n    normalizeWheel = false,\r\n    autoResize = true,\r\n  } = {}) {\r\n    // warn about legacy options\r\n    if (direction) {\r\n      console.warn(\r\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\r\n      )\r\n    }\r\n    if (gestureDirection) {\r\n      console.warn(\r\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\r\n      )\r\n    }\r\n    if (mouseMultiplier) {\r\n      console.warn(\r\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\r\n      )\r\n    }\r\n    if (smooth) {\r\n      console.warn(\r\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\r\n      )\r\n    }\r\n\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.rootElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n    this.animate = new Animate()\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.rootElement.classList.remove('lenis')\r\n    this.rootElement.classList.remove('lenis-smooth')\r\n    this.rootElement.classList.remove('lenis-scrolling')\r\n    this.rootElement.classList.remove('lenis-stopped')\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\r\n      (i) => callback !== i\r\n    )\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = type === 'touch'\r\n    const isWheel = type === 'wheel'\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent') || isTouch && node?.hasAttribute?.('data-lenis-prevent-touch') || isWheel && node?.hasAttribute?.('data-lenis-prevent-wheel'))\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\r\n      }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onUpdate: (value, { completed }) => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        // completed\r\n        if (completed) {\r\n          if (lock) this.isLocked = false\r\n          requestAnimationFrame(() => {\r\n            //avoid double scroll event\r\n            this.isScrolling = false\r\n          })\r\n          this.velocity = 0\r\n          onComplete?.()\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? this.options.content\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.rootElement.classList.toggle('lenis-smooth', value)\r\n      this.__isSmooth = value\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.rootElement.classList.toggle('lenis-scrolling', value)\r\n      this.__isScrolling = value\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.rootElement.classList.toggle('lenis-stopped', value)\r\n      this.__isStopped = value\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "advance", "deltaTime", "_this$onUpdate", "this", "isRunning", "completed", "lerp", "value", "x", "y", "to", "t", "exp", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "Dimensions", "constructor", "wrapper", "content", "autoResize", "resize", "onWrapperResize", "onContentResize", "window", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "_this$wrapperResizeOb", "_this$contentResizeOb", "disconnect", "limit", "createNanoEvents", "events", "emit", "event", "callbacks", "i", "length", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "VirtualScroll", "element", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "onTouchStart", "clientX", "clientY", "targetTouches", "touchStart", "lastDelta", "onTouchMove", "deltaX", "deltaY", "emitter", "type", "onTouchEnd", "inertia", "onWheel", "addEventListener", "passive", "removeEventListener", "Lenis", "direction", "gestureDirection", "mouseMultiplier", "smooth", "document", "documentElement", "wheelEventsTarget", "smoothWheel", "smoothTouch", "syncTouch", "syncTouchLerp", "touchInertiaMultiplier", "pow", "infinite", "orientation", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "isWheel", "options", "scroll", "composedPath", "find", "node", "hasAttribute", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "_extends", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "sign", "console", "warn", "lenisVersion", "body", "dimensions", "rootElement", "classList", "add", "virtualScroll", "remove", "off", "_this$emitter$events$", "setScroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "offset", "immediate", "lock", "onComplete", "force", "includes", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "requestAnimationFrame", "d", "progress", "__isSmooth", "toggle", "__isScrolling", "__isStopped"]
}
